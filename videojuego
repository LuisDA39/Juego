import os
import time
import pygame

class Videogame():
    def __init__(self):
        self.health = 100
        self.inventory = []
        self.player_position = [0,3]
        self.map = [
            [0, 0, 0, 0, 0, 1, 0, 0, 1, 0],
            [0, 1, 0, 0, 1, 1, 0, 1, 0, 0],
            [1, 0, 0, 1, 0, 0, 0, 0, 1, 0],
            [0, 1, 0, 0, 0, 1, 1, 0, 0, 0],
            [1, 0, 1, 0, 0, 0, 1, 0, 0, 1],
            [0, 0, 0, 1, 0, 0, 0, 1, 1, 0],
            [0, 1, 0, 0, 0, 1, 0, 0, 0, 0],
            [0, 0, 1, 0, 0, 0, 1, 0, 0, 1],
            [0, 0, 0, 1, 1, 0, 0, 1, 1, 1],
            [1, 0, 0, 1, 0, 1, 0, 0, 0, 0]
        ]

    def play_music(self, file_path):
        pygame.init()
        pygame.mixer.init()
        pygame.mixer.music.load(file_path)
        pygame.mixer.music.play()

    def print_slow(self, text):
        for char in text:
            print(char, end = '', flush = True)
            time.sleep(0.0001)
        print()

    def path_A(self):
        print("")
        self.print_slow("      Tony successfully cuts the rope; however, the problem is not over yet, he is wretched and even more distressed.")
        self.print_slow("      He takes another look, he sees a window on the right side of the room, his despair makes him about only three options ")
        print("                Break the window  [Break]")
        print("                Kick the door  [Kick]")
        print("                Use the spring on the door lock   [Spring]")

        while True:
            option = input("Type: ")
            op = option.lower()

            if any(keyword in op for keyword in ['break', 'kick', 'spring']):
                if op == 'break':
                    self.print_slow("processing...")
                    self.path_C()  
                    break
                if op == 'kick':
                    self.print_slow("processing...")
                    self.path_D()
                    break
                if op == 'spring':
                    self.print_slow("processing...")
                    self.path_E()
                    break
            else:
                print("Not the word we're looking for\n")
                time.sleep(1)
    
    def path_B(self):
        print("")
        self.print_slow("      Tony attempts to sever the rope, but a misjudged move results in a perilous gash across his hand, blood trickling as ")
        self.print_slow("      he collapses from the injury. Health depletes by 25 points.. ")
        self.print_slow("      Unfortunately, The Keeper caught wind of his attempts to break free. Swiftly, the rope was replaced with unyielding")
        self.print_slow("      plastic straps, binding Tony to the chair before The Keeper departed.")
        self.health -= 25
        print("                Patiently wait until The Keeper dozes off [Wait]")
        print("                Attempt to get free by breaking the chair [Attemp]")

        while True:
            option = input("Type: ")
            op = option.lower()

            if any(keyword in op for keyword in ['wait', 'attemp']):
                if op == 'wait':
                    self.print_slow("processing...")
                    self.path_F()
                    break
                if op == 'attemp':
                    self.print_slow("processing...")
                    self.path_G()
                    break
            else:
                print("Not the word we're looking for\n")
                time.sleep(1)

    def path_C(self):
            print("")
            self.print_slow("      Tony breaks the window, unluckily for him, there was a grill outside the window, The Keeper listened to all the ")
            self.print_slow("      noise he made, he is coming…  ")
            print("                Use the stick to strike the Keeper [Strike]")
            print("                Make a run for it [Run]")
            print("                Let yourself be caught [caught]")

            while True:
                option = input("Type: ")
                op = option.lower()

                if any(keyword in op for keyword in ['strike', 'run', 'caught']):
                    if op == 'strike':
                        self.print_slow("processing...")
                        self.path_H()
                        break
                    if op == 'run':
                        self.print_slow("processing...")
                        self.path_I()
                        break
                    if op == 'caught':
                        self.print_slow("processing...")
                        self.path_J()
                        break
                else:
                    print("Not the word we're looking for\n")
                    time.sleep(1)

    def path_D(self):
            print("")
            self.print_slow("      Tony kicks repeatedly the door, he’s making way too much noise, he wasn’t able to break it, The Keeper is coming…  ")
            print("                Use the stick to strike the Keeper [Strike]")
            print("                Make a run for it [Run]")
            print("                Let yourself be caught [Caught]")

            while True:
                option = input("Type: ")
                op = option.lower()

                if any(keyword in op for keyword in ['strike', 'run', 'caught']):
                    if op == 'strike':
                        self.print_slow("processing...")
                        self.path_H()
                        break
                    if op == 'run':
                        self.print_slow("processing...")
                        self.path_I()
                        break
                    if op == 'caught':
                        self.print_slow("processing...")
                        self.path_J()
                        break
                else:
                    print("Not the word we're looking for\n")
                    time.sleep(1)
    
    def path_E(self):
        print("")
        self.print_slow("      Tony molded the spring on a perfect shape and used it to open the door, Tony is free, he runs as fast as he can")
        self.print_slow("      and gets out the cabin, everything around is forest...")
        print("")
        self.unlock_map()
        #self.Map()

    def path_F(self):
        print("")
        self.print_slow("      Enduring a tense six-hour wait until the cabin fell silent, Tony seized his chance, What’s next for Tony? ")
        print("                break free from the chair [chair]")
        print("                keep waiting [wait]")

        while True:
            option = input("Type: ")
            op = option.lower()

            if any(keyword in op for keyword in ['chair', 'wait']):
                if op == 'chair':
                    self.print_slow("processing...")
                    self.path_K()
                    break
                if op == 'wait':
                    self.print_slow("processing...")
                    self.path_L()
                    break
            else:
                print("Not the word we're looking for\n")
                time.sleep(1)

    def path_G(self):
        print("")
        self.print_slow("      As Tony breaks free from the chair, the Keeper, alerted by the commotion, moves swiftly to recapture him... ")
        print("                Use the stick to strike the Keeper [Strike]")
        print("                Make a run for it [Run]")
        print("                Let yourself be caught [Caught]")

        while True:
                option = input("Type: ")
                op = option.lower()

                if any(keyword in op for keyword in ['strike', 'run', 'caught']):
                    if op == 'strike':
                        self.print_slow("processing...")
                        self.path_H()
                        break
                    if op == 'run':
                        self.print_slow("processing...")
                        self.path_I()
                        break
                    if op == 'caught':
                        self.print_slow("processing...")
                        self.path_J()
                        break
                else:
                    print("Not the word we're looking for\n")
                    time.sleep(1)

    def path_H(self):
        print("")
        self.print_slow("      Tony wields the stick, delivering a forceful blow to The Keeper before launching into a relentless barrage ")
        self.print_slow("      of kicks and punches until the antagonist succumbs, collapsing to the ground. With swift determination,")
        self.print_slow("      Tony seizes the chance to make his escape, bolting from the cabin in a desperate rush for freedom.")
        print("")
        self.unlock_map()
        #self.Map()
    
    def path_I(self):
        print("")
        self.print_slow("      In a fit of frustration, he unleashed an attack of rage, furiously kicked the mattress and a hidden void beneath")
        self.print_slow("      the floor revealed itself, Without hesitation, he reached into the hollow and unearthed a rusted clasp-knife. He")
        self.print_slow("      He took it and use it to break the handle, lamentably the clasp-knife was too old and broke in the process.  He")
        self.print_slow("      didn’t look back and got to be free, however this isn’t over…")
        print("")
        self.unlock_map()
        #self.Map()

    def path_J(self):
        pass

    def path_K(self):
        print("")
        self.print_slow("      With determination, he launched a daring attempt, successfully breaking free from the chair, nailing the")
        self.print_slow("      escape and skillfully shattered the door lock, consumed by desperation to flee. Without a glance back,")
        self.print_slow("      he sprinted into the unknown, bursting out into the dense forest beyond. ")
        print("")
        self.unlock_map()
        #self.Map()
    
    def path_L(self):
        print("")
        self.print_slow("      Tony drifted into an uneasy slumber, yet this time, his dreams took a terrifying turn. A malevolent ")
        self.print_slow("      creature invaded his subconscious, unleashing a harrowing nightmare. Relentlessly pursued, he was finally  ")
        self.print_slow("      ensnared, the creature threatening to devour his very soul. It provoked him an intense fever within the ")
        self.print_slow("      dream jolted him awake, but not before his health plummeted by 50 points. A critical choice is up ahead:")
        self.health -= 50
        print("                Continue trying to escape  [Continue]")
        print("                Give up [Give up]")

        while True:
                option = input("Type: ")
                op = option.lower()

                if any(keyword in op for keyword in ['continue', 'give up']):
                    if op == 'continue':
                        self.print_slow("processing...")
                        self.path_M()
                        break
                    if op == 'give up':
                        self.print_slow("processing...")
                        self.path_N()
                        break
                else:
                    print("Not the word we're looking for\n")
                    time.sleep(1)

    def path_M(self):
        print("")
        self.print_slow("      As dawn breaks, the Keeper appears, his presence ominous in the eerie morning light. With a haunting ")
        self.print_slow("      smile, he extends an unsettling invitation a choice between a sandwich or a plate of hash browns. The")
        self.print_slow("      keeper unties him from the chair, but he is still tied. The air thickens with a sense of foreboding as")
        self.print_slow("      Tony weighs his options, unaware of the hidden intentions lurking behind this seemingly simple offer.")
        print("                Eat the sandwich  [Sandwich]")
        print("                Eat the hash browns [Hash browns]")

        while True:
                option = input("Type: ")
                op = option.lower()

                if any(keyword in op for keyword in ['sandwich', 'hash browns']):
                    if op == 'sandwich':
                        self.print_slow("processing...")
                        self.path_O()
                        break
                    if op == 'hash browns':
                        self.print_slow("processing...")
                        self.path_P()
                        break
                else:
                    print("Not the word we're looking for\n")
                    time.sleep(1)

    def path_N(self):
        print("")
        self.print_slow("      Tony couldn’t fight anymore with the nightmares. His valiant struggle for air ended as the suffocating  ")
        self.print_slow("      embrace of the thought silenced his fight, and his consciousness slipped away into the abyss.")
        self.print_slow("      loading . . .")
        print("""

                              ▄████  ▄▄▄       ███▄ ▄███▓▓█████ 
                             ██▒ ▀█▒▒████▄    ▓██▒▀█▀ ██▒▓█   ▀ 
                            ▒██░▄▄▄░▒██  ▀█▄  ▓██    ▓██░▒███   
                            ░▓█  ██▓░██▄▄▄▄██ ▒██    ▒██ ▒▓█  ▄ 
                            ░▒▓███▀▒ ▓█   ▓██▒▒██▒   ░██▒░▒████▒
                             ░▒   ▒  ▒▒   ▓▒█░░ ▒░   ░  ░░░ ▒░ ░
                              ░   ░   ▒   ▒▒ ░░  ░      ░ ░ ░  ░
                            ░ ░   ░   ░   ▒   ░      ░      ░   
                                  ░       ░  ░       ░      ░  ░
                                    
                             ▒█████   ██▒   █▓▓█████  ██▀███    
                            ▒██▒  ██▒▓██░   █▒▓█   ▀ ▓██ ▒ ██▒  
                            ▒██░  ██▒ ▓██  █▒░▒███   ▓██ ░▄█ ▒  
                            ▒██   ██░  ▒██ █░░▒▓█  ▄ ▒██▀▀█▄    
                            ░ ████▓▒░   ▒▀█░  ░▒████▒░██▓ ▒██▒  
                            ░ ▒░▒░▒░    ░ ▐░  ░░ ▒░ ░░ ▒▓ ░▒▓░  
                              ░ ▒ ▒░    ░ ░░   ░ ░  ░  ░▒ ░ ▒░  
                            ░ ░ ░ ▒       ░░     ░     ░░   ░   
                                ░ ░        ░     ░  ░   ░       
        
                     
        """)
        return

    def path_O(self):
        print("")
        self.print_slow("      Tragically, Tony succumbed to the poisoned sandwich, the unsuspecting meal sealing his fate. As the")
        self.print_slow("      toxin took hold, his strength waned, and the world faded into darkness. His valiant efforts were in ")
        self.print_slow("      vain, lost to the sinister ploy hidden within the innocent offering.")
        print("""

                              ▄████  ▄▄▄       ███▄ ▄███▓▓█████ 
                             ██▒ ▀█▒▒████▄    ▓██▒▀█▀ ██▒▓█   ▀ 
                            ▒██░▄▄▄░▒██  ▀█▄  ▓██    ▓██░▒███   
                            ░▓█  ██▓░██▄▄▄▄██ ▒██    ▒██ ▒▓█  ▄ 
                            ░▒▓███▀▒ ▓█   ▓██▒▒██▒   ░██▒░▒████▒
                             ░▒   ▒  ▒▒   ▓▒█░░ ▒░   ░  ░░░ ▒░ ░
                              ░   ░   ▒   ▒▒ ░░  ░      ░ ░ ░  ░
                            ░ ░   ░   ░   ▒   ░      ░      ░   
                                  ░       ░  ░       ░      ░  ░
                                    
                             ▒█████   ██▒   █▓▓█████  ██▀███    
                            ▒██▒  ██▒▓██░   █▒▓█   ▀ ▓██ ▒ ██▒  
                            ▒██░  ██▒ ▓██  █▒░▒███   ▓██ ░▄█ ▒  
                            ▒██   ██░  ▒██ █░░▒▓█  ▄ ▒██▀▀█▄    
                            ░ ████▓▒░   ▒▀█░  ░▒████▒░██▓ ▒██▒  
                            ░ ▒░▒░▒░    ░ ▐░  ░░ ▒░ ░░ ▒▓ ░▒▓░  
                              ░ ▒ ▒░    ░ ░░   ░ ░  ░  ░▒ ░ ▒░  
                            ░ ░ ░ ▒       ░░     ░     ░░   ░   
                                ░ ░        ░     ░  ░   ░       
        
                     
        """)
        return

    def path_P(self):
        print("")
        self.print_slow("      Despite the unsettling aura surrounding the hash browns, Tony, driven by fear yet clinging to a glimmer")
        self.print_slow("      of hope, consumed them. Each bite laden with trepidation, his heart raced with every swallow, unsure of")
        self.print_slow("      the consequences but determined to face whatever lay ahead.")
        print("                Take advantage of the situation and attack the keeper  [Advantage]")
        print("                do nothing  [Nothing]")

        while True:
                option = input("Type: ")
                op = option.lower()

                if any(keyword in op for keyword in ['advantage', 'nothing']):
                    if op == 'advantage':
                        self.print_slow("processing...")
                        self.path_Q()
                        break
                    if op == 'nothing':
                        self.print_slow("processing...")
                        self.path_R()
                        break
                else:
                    print("Not the word we're looking for\n")
                    time.sleep(1)

    def path_Q(self):
        print("")
        self.print_slow("      Tony, fueled by desperation, hurls the dish at The Keeper, initiating a fierce assault of kicks and punches ")
        self.print_slow("      until the assailant collapses. Seizing the opportunity, Tony bolts in a rush, fleeing from the cabin's clutches")
        self.print_slow("      in a bid for freedom.")
        print("")
        self.unlock_map()
        #self.Map()

    def path_R(self):
        print("")
        self.print_slow("      Tony's pulse quickens as the keeper's warning echoes in his mind. With time slipping away, he frantically")
        self.print_slow("      scans the room, seeking an escape route. Determined, he scours for hidden clues. The impending nightfall looms,")
        self.print_slow("      urging him to find freedom before it consumes him in eternal sleep.Tony has to find a way out before the ")
        self.print_slow("      night hits again, what should he do? ")
        print("                Get The Keepr’s attention back  [Attention]")
        print("                Find another way out  [Find]")

        while True:
                option = input("Type: ")
                op = option.lower()

                if any(keyword in op for keyword in ['attention', 'find']):
                    if op == 'attention':
                        self.print_slow("processing...")
                        self.path_S()
                        break
                    if op == 'find':
                        self.print_slow("processing...")
                        self.path_T()
                        break
                else:
                    print("Not the word we're looking for\n")
                    time.sleep(1)

    def path_S(self):
        print("")
        self.print_slow("      Tony started yelling until the keeper visited him one more time, Tony asked him about the truth,")
        self.print_slow("      why was he there, why him?, The keeper just laughed at him and told him he was part of his  ")
        self.print_slow("      masters plan, his master was hungry and he was his next meal, a sudden wave of dizziness gripped ")
        self.print_slow("      Tony, the resurgence of a fever igniting within him. The creature slithered back into his ")
        self.print_slow("      consciousness, leeching on his memories until they dwindled to nothingness, leaving Tony's mind ")
        self.print_slow("      a blank canvas, devoid of his once vibrant past ")
        print("""


                              ▄████  ▄▄▄       ███▄ ▄███▓▓█████ 
                             ██▒ ▀█▒▒████▄    ▓██▒▀█▀ ██▒▓█   ▀ 
                            ▒██░▄▄▄░▒██  ▀█▄  ▓██    ▓██░▒███   
                            ░▓█  ██▓░██▄▄▄▄██ ▒██    ▒██ ▒▓█  ▄ 
                            ░▒▓███▀▒ ▓█   ▓██▒▒██▒   ░██▒░▒████▒
                             ░▒   ▒  ▒▒   ▓▒█░░ ▒░   ░  ░░░ ▒░ ░
                              ░   ░   ▒   ▒▒ ░░  ░      ░ ░ ░  ░
                            ░ ░   ░   ░   ▒   ░      ░      ░   
                                  ░       ░  ░       ░      ░  ░
                                    
                             ▒█████   ██▒   █▓▓█████  ██▀███    
                            ▒██▒  ██▒▓██░   █▒▓█   ▀ ▓██ ▒ ██▒  
                            ▒██░  ██▒ ▓██  █▒░▒███   ▓██ ░▄█ ▒  
                            ▒██   ██░  ▒██ █░░▒▓█  ▄ ▒██▀▀█▄    
                            ░ ████▓▒░   ▒▀█░  ░▒████▒░██▓ ▒██▒  
                            ░ ▒░▒░▒░    ░ ▐░  ░░ ▒░ ░░ ▒▓ ░▒▓░  
                              ░ ▒ ▒░    ░ ░░   ░ ░  ░  ░▒ ░ ▒░  
                            ░ ░ ░ ▒       ░░     ░     ░░   ░   
                                ░ ░        ░     ░  ░   ░       
        
                     
        """)
        return

    def path_T(self):
        print("")
        self.print_slow("      In a fit of frustration, he unleashed an attack of rage, furiously kicked the mattress and a hidden void beneath")
        self.print_slow("      the floor revealed itself, Without hesitation, he reached into the hollow and unearthed a rusted clasp-knife. He")
        self.print_slow("      He took it and use it to break the handle, lamentably the clasp-knife was too old and broke in the process.  He")
        self.print_slow("      didn’t look back and got to be free, however this isn’t over…")
        print("")
        self.unlock_map()
        #self.Map()

    def easter_egg1(self):
        file_path = r'C:\Users\lloyd\Downloads\WhatsApp Audio 2023-11-25 at 15.51.39.mpeg'
        self.play_music(file_path)
        print("""

                    -%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                    -%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                    -%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#:::-#%%%=:::+%%:::::::::::+%@%=:::::::::-%@@#-:::::::::+@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                    -%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*   .+%%%-   :#%            +@+           :#@-           -%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                    -%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*    +%%%-   :#%    =**#.   =%+   :*##+   .*@:   -###-   :%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                    -%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*    +%%%-   :#%    +%%%.   =%+   :#@@*   .*@:   -%@@=   :%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                    -##%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*    +%%%-   :#%    +%%%.   =%*    =%@%*==+#@-    *@@%+==+%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                    -########%%%%%%%%%%%%%%%%%%%%%%%%%%*    +%%%-   :#%    =***.   =%%#:    =%@@@@@@%+.   .+%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                    -****#######%%%%%%%%%%%%%%%%%%%%%%%*    +%%%-   :#%    :      .=%%%%#-    -#@@@@@@@*:    +@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                    -++******######%%%%%%%%%%%%%%%%%%%%*    +%%%-   :#%    =.   -**%%%%%%%#-    -#@@@@@@@*:   .=%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                    :++++++++***######%%%%%%%%%%%%%%%%%*    +%%%-   :#%    +#   .*%%%#===*%%%-   :#@+===#@@#:   -%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                    :=++++++++++**######%%%%%%%%%%%%%%%*    +%%%-   :##    +%+   :%%%+   :*%%*   .*@:   -%@@=   :%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                    :========+++++***#######%%%%%%%%%%%*    +###-   :##    +%%:   =%%+   :*%%*   .*@:   :%%%=   :%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                    :==========+=++++***###########%%%%*            :##    +%%#    *%*           :*%-           -%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                    :======-=====++++++****###########%%+:.........:+%%-..:+%%%*:..-#%*:........:=%%%=:........:+%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                    :======-======++++++++****########%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                    :====----========++++++++***########%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                    :===-------=========++++++++****#####%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                    :===--------==========+++++++++***######%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                    :==----------===========++++++++++**########%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                    :==-----------=====-=======+++++++++***#########%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@@@@%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                    :==--------------===========++++++++*******#######%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@%@%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                    :=---------------==============+++++++++******#######%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                    :==-------------------============+++++++++******#######%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                    :=---------------------=============+++++++++++***########%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@%%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@
                    :=-------------------------==========++++++++++++*****######%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*=-===-=+*#%%@@@@@@@@@@@@@@@@@@@@
                    =@%*=----------------------============+++++++++++******######%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*--::-=+=-::-*%@@@@@@@@@@@@@@@@@@@@
                    =@@@@+---------------------===============+++++++++++*****######%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*---=+##+-::=*%@@@@@@@@@@@@@@@@@@@@
                    =@@@@@-----------------------==================+++++++******####%%%@@@@%%%%%%%%%%%%%%%%%%%%%%%%#++*#*#*-::-=*%@@@@@@@@@@@@@@@@@@@@
                    =@@@@@-----------------------===================+++++++++****##%@@@@@@@@@@@%%%%%%%%%%%%%%%%%%%%%%++*%#=::--=*%@@@@@@@@@@@@@@@@@@@@
                    =@@@@@------------------------=-=================+++++++++**#%@@@@@@%%%@@@@@@@@%%%%%%%%%%%%%%%%%*=++=-:----=+#@@@@@@@@@@@@@@@@@@@@
                    =@@@@@=------------------------=-==================+++++++*%@@#*+++******#%@@@@@%%%%%%%%%%%%%%%%*=----===---=*%@@@@@@@@@@@@@@@@@@@
                    =@@@@@+---------------::::---=-===+=----===+======+==+++++*@%*=--=*%%#***###@@@@@@%%%%%%%%%%%%%%%#**++=-:::::-+%@@@@@@@@@@@@@@@@@@
                    :=@@@@=--------------::::-=====*++**-=====++=========+++++++=+*++=+*++**++###%@@@@@@%%%%%%%%%%%%%%%%#*=-::.:::-*%@@@@@@@@@@@@@@@@*
                    :+@@@@=:::::---------::::-=++=*%#*##+=+++=========+====++*****+*+--::::-=+*###@@@@@@@@%%%%%%%%%%%%%%%%*=--=+*#%@@@@@@@@@@@@@@@@@@*
                    =@@@@@-::::::::------:::::::-++++****++=================++++------::::--=+*###@@@@@@@@@%%%%%%%%%%%%%%%%#%%%%%@@@@@@@@@@@@@@@@@@@@@
                    =@@@@@-:::::::::---::::---=+++******+==================+=-==++==-:::-=-==+**##@@@@@@@@@%%%%%%%%%%%%%%%@@@@@#+===+%@@@@@@@@@@@@@@@@
                    =@@@@%-:::::::::-:::::---+########*+===--==============+=+*==-----:-=----=+**#%%#%%@@@@@%%%%%%%%%%%%%%%@@#=:::--=+%@@@@@@@@@@@@@@@
                    =@@@@%:::::::::::::::::-+###+=============-===========++==::::::::-==----=+*###*****+#@@%%%%%%%%%%%%%%%@%=-:::---=*%@@@@@@@@@@@@@@
                    =@@@@#::::::::::::::::-=#%#=----=========================--::----=++=====+*#%#+=*+=+*#@@###%%%%%%%%%%%%%%+--::---==*%@@@@@@@@@@@@@
                    =@@@@*:::::::::::::::-=#%#+------=========================+*######********#%%%%%%#%%@@@%######%%%%%%%%%%%*=-::----=+#%@@@@@@@@@@@@
                    =@@@@*::::::::--::---=*%%+------========================*%%%%%%%%%%%%%%%%%%%**#%@@@@@@%#########%%%%%%%%%*=-------==+#%@@@@@@@@@@@
                    =@@@@+:::::::--:::-==*#%+--------========================*%@%%%%%#######******#%@@@@@@###########%%%%%%%%#=--:-----=+*%@@@@@@@@@@@
                    =@@@@+:::::::--::--=*#%*---------==========-==============+#%%#**+++++++++++*#%%@@@@@#############%%%%%%%#+--------==+#%@@@@@@@@@@
                    =@@@@=:::::---::--=*###-------------===-==================+++**==-====+====+*#%@@@@#**####*########%%%%%%#+=-------==+*#%@@@@@@@@@
                    =@@@%-:::::--::--=+*#%+------------====-===================++++===========++*#%@@%***#################%%%#*=-------==+*#%@@@@@@@@@
                    =@@@*:::::==----=+*#%%--------------=-=--=================+++++===--===-==+**#%%%#****#################%##*==------==++*#%@@@@@@@@
                    =@@@=:-:-==----==+*#%%----------------=--=================++++++--------==++*#%########################%###+==-----==++*#%@@@@@@@@
                    =@@%-----==----=+*##%@%+-----------------==-==============+++=====---:--===++*#***#########################+===---===++**%%@@@@@@@
                    =@@#----===--==+*##%%@@%+-----------------=---======+**+==+**+------:::---====+*########################%%%*=========++**#%%%@@@@@
                    =@@#+========++**##%%@@@#---------------===++**######%%%%*####+-:::::::-::--+*#%%##########################*+========++**#%%%%@@@@
                    =@@@@@#=====++**###%@@@@%%%#**+=====+++*#############%###########*+++++++*####%############################*++++++==+++**##%%%%%@@
                    =@@@@@+=++++++**##%%%%%%***#########################%#######################################################*++++++++++**##%%%%%%%
                    -@@@@#++++++++**##*+===*##################################################################################*+**++++++++++*#%%%%%%%%
                    =@@@@+====+++++++===---=###################***+++==========++++***###################################%###*=++++++++++++**#%%%%%%%%
                    -@@@#++====++===========*###%%#%%%#%#%#+-::::-------::::::::::::::::-=*#########################%##%%%###*++++++++**###%%%@@%%%%%%
                    -@@@@%%#*+***************#%%%%%%%%%%#%#-=---::::::::::::::::::::::::::=*###**##################%%##%%%%#%########%%%@@@@@@@%%%%%%%
                    -@@@@@@@@@%%%%%%%%%%%%%##%%%%%%%%%%%%%%%=:::::::::::::::::::........:-####**=*##%%############%%%%%%%@@%%@%@@@@@@@@@@@@%%%%%%%%%%%
                    -@@@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%%%%%%%#*:::::::::..................:*########%%###############%%%%@@@@%%@@@@@@@@@@@@@%%%%%%%%%%%%
                    -@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%%@@%####-::::::...................:-######%%#################%%%%%@@@@@%@@@@@@@@@@@@%%%%%%%%%%%%%
                    -@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%@@@@%####=::::::::................::+#########################%%%%@@@@@@@@@@@@@@@@@@%%%%%%%%%%%%%%
                    -@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%####+:::::::::::::::::::::::::-####****++++++*****#######%%%@@@@%%%%@@@@@@@@@@@%%%%%%%%%%%%%%
                    -@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%@@@@@%####*:::::::::::::::::::::::::-:::::::::::::::::::-+####%%%@@@%######%@@@@@@@%%%%%%%%%%%%%%%%
                    -@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%#####::::::::::::::::::::::::--:::::::::::::::::::-#####%%@@@%########%%%%%%%%%%%%%%%%%%%%%%%
                    -#*+==============++*#@@@@@@@@@@@@@@%#####-::::::::::::::::::::::---::.........::::::::*####%%%@@@%#########%%%%%%%%%%%%%%%%%%%%%%
                    -%=------------------*@@@@@@@@@@@@@@%#####+:::::::::::::::::::::--=*::.........:::::::-#####%%%@@@%########%%%%%%%%%%%%%%%%%%%%%%%
                    =@*-::::::::::::----+@@@@@@@@@@@@@@@######*:::::::::::::::::::::--+#-::......:::::::::-####%%%%@@@%########%%%%%%%%%%%%%%%%%%%%%%%
                    =@#-:::::::::::-----%@@@@@@@@@@@@@@@#######-:::::::::::::::::::--=*#=::...:::::::::::-+####%%%%@@@######%##%%%%%%%%%%%%%%%%%%%%%%%
                    =@%-::::::::::-----+@@@@@@@@@@@@@@@@#######=::::::::::::::::::---=##*:::::::::::::::--*####%%%@@@@#########%%%#%%%%%%%%%%%%%%%%%%%


        """)

    def easter_egg2(self):
        file_path = r'C:\Users\lloyd\Downloads\Y2meta.app - Stranger Things _ Season 1 _ Opening - Intro HD (128 kbps).mp3'
        self.play_music(file_path)
        print("""
                                                                             :=++**:                                      
                                                                          .-=*#%%%#+.                                     
                                                                     ..:-=*#%%%%%%%%=.                                    
                                                                   .:-=+#%#++#%#***#%*-.                                  
                                                                 .:-+######::*%%%=-#%%#=:                                 
                                                 ..::::..       .-+*%*-.-*%*.+%%%%+-+#%%*:                                
                                            ..:::--=========:   =+#%@%#-.*%%##%%%%-:-#%%#*.                               
                                          .::-=*#%##%%%######*.:*%%%%%%@%%%%%%%%%%++%%%%%#=                               
                                       .::=*##%%%*=-*%%%%%%%%%%=#%%*=-+%@%%%%%%%#%%*==#%%%* ::---------::::.              
                                    .:-=*%###+=*%*-..#%%%%%%%%%%%%#+..-@@%%%#%##%%%=.-+%%%#*++****++++===--:::.           
                                 .:-+*##*##%#-::-%#+:+%%%%%%%%%%%@%%#=*%%%%%%%##%%%:=*%%%%##%%%#####%*++###*+=-::.        
                                :=*%#%#=--#%%%#*+%%%%%%%%*++%@%@%%#*##*###%%%%%%#%%#%%%###%%%%%=:-+%*::-+%%#**#*=-::      
                               :*####%#=:.-%%%%%%%%%%%@%%*-.*@@%%########**##%%%%#%%%%###%%%%%#..:#%:-+#%%%--+*###*=-:.   
                                -##%##%#=..*%%%%%%%%@@@@@@@%%%#%%%##***+-.+**+-###%%%######%%%+.=%%%%%%%%%==+#%##++*#*=:. 
                                 -###%%%##+%%%%%%%%%%%%%@@@%%%#####+:.**=.=%#-:***+#%%%%%%%%%%*###%%%%##%#%#####=.:=*%%*=:
                                  =#%%#=--+%%%%%%%%%%%@@@%%%#*##**+*: +%@#@@@%*#=.:#%%%%%%%%*####%%####*##%#####..=#%%%%%*
                                   -*#%#**+*#%%%%%%%%%%@%%###=*#=:=#@+%@@@@@@@@@%.*###%%%%%%###%###****+****#%##=+=*##%%%#
                                    -+#%%#-..:=%%%%%%%%%#*###+*+*=-@@@@@@@@@@@@@@%%:-+%%%%%%#*#%%#*+#**+****##*+=-:=**####
                                     -+*##+-=+*###%@%%@%%%%%%#*#%@@@@@@@@@@@@@@@@@@+*%%%%%%%%*%%%##+#############********=
                                      :+*#%%%#=--=#%*-:*%%%#%%#%@@@@@@@@@@@@@@@@@@@@%%%%%%%%%#*%%%%%##%#%%#+==+*#*++**=:  
                                       .-+##%%=:::+:  :%%%%##%##%@@@@@@@@@@@@@@@@@@@%%%%%%%#%##%%%%#**###%*---+*****-     
                                          .-=+*+=++##%%%%#*%%###%%@@@@@@@@@@@@@@%%%##%%%%%%+. :+#%#%=--**%%%#****=:       
                                                -=+***%%%%%%#*-+*#%%%@@%@@@@@%#%%##*#%%%%%##*-::=*#*.::*#*****+:          
                                               :-+#+:..-%%%%%:-**#%%##*#%%####***+==+*=%#%%%%%##***--++##*=-:             
                                              .:-#%+:.:+%@@@@+*##%%%%+-*#**==**++=::-:-%%%###--+**+- ...                  
                                              .:=**#%#%%%%%%%%%%%%%%###%###*#%#**+=--*%%%###*++*#++=                      
                                              :-*-:..-+#%%%#####**#%%%%%##%%%%####+*%###*+++**#%%%*=.                     
                                             .:=%#*+***#%%%%#####***##%%%#%%######+=***+*+++**###*+=:                     
                                             .-*##%%%###%#########*##%%@@####++*######*#**++++*--=+=-                     
                                   ..:..  .=.:=*-:=#########*###*=--=*%@@%##=*#######******==+*###%+-                     
                                 :-=+***++##.:+#=-=######%#*###*+=--=*%%@##==+#%###******+*+++*%%##*=.                    
                               :==-=+**##### :+#**###%%%######*--**####%%**+**%%##*****+++++**+::-+*=:=-.                 
                             :=====--=+**##+.-=-..:-+%%#%*.:#*=-=*##***%%++++**=:=#*+++=+++***#**#%#=:#*+=:.              
                           :=++++++++=---+*=.-+#*#%%%#--*---#%####*+*#@@@@#==*+==*#**++++++++****###+:#**+-:              
                        .:=++*****+++*++=--:.-+#####*=-+##**###***#%%%%%@@%%*===*#**+-=*+++=**-.:.:++:***+++=:.           
                      .-=+=====++***+++**+=-.-+#***#***********#%%%%%%#%%@%%##+=--=++=+***+.+*#*++**+:*****+++=.          
                     .=----=====+++++++==++= :+*+++++******##%%%%%%%%%##%%%##*+***=--==*##+-=*####%*-:*####*+++=.         
                    .=-----------====++++-==-.-=++****#####*###%%%%%#***####**++#%%#*+=---===++**##*=:*####*#++=.         
                   .--------::.::-========-:---=+++**+****#######%%%*==+*####*+*##%%###*+**+=:--=+*+-:*######*+=.         
                   :=------::..::--===+=====::.-=++****++==+==**#####*=+****#*+*#####*+#%%%%%#*+=:--:=%######**-          
                  .-=------:::.:---========+--::-+*####***#****+++++*****++****+***++#%%%#########*+##%%%%%%#**-          
                  :==--------:----===++=====---:-+*##**++++++++***+==-==++****++++=+*###*********##**%%%%%%%###:          
                  :+===========++++++++++++-==--=*#**+************++++===-=*#*+++===++**+++++++++***++#%%%###*#.          
                  .++====+++++++*******#*+==--.:=**+++==+++++==============+##*+======++++++++++++++++#%@%%##**           
                  .+++++++****##**#####*++==-:.:=+===---==----====-----====+*#*+=====++++++++++++==+#%%%@%%#*+#-.         
                   =*++***##******####*+==---::.--==-------------------=====*#*++===+++++++++++==+*#@@@%%%##%+**+-        
                   :*+****++++++*####****+==--::.:::---------------=--=--===+*#*++==+++++++++=+++++%@@@%%%###+=##+.       
                    =****+++**##%#**##%@@@%%#**++==-::::-:------------=---===+#++===++++++++++++++*@@@@@%%%%#+++#%-       
                    :******###*+=-=+#%#%@%%####**++==--::-:::::-----------===+**=+++++++++++++++++*%@@@%%%%##*+=*#:       
                    .+++*##*+==-==+*#**%@%###*##*#*+=--::::::-------=======+++***++********++++*#*+%%@%%%%%%###=+#:       
                    :=++**====--=+*##.+%%####****++*+==--:::::----===++++******-=#*####%%%%####**++%%%%%%%%%%###+*=       
                    :=+**=-----==+##=  ==#*#**++*+===+++++==--==++**########*+---*#%%%###**+++++=+++##%@%%%%%%##%##:      
                   :-=*+===--===+*##    =##**#*+++==-:-===++*****+********++=---:=*###****+++++++==+*#%%%%%%%%%%###+:     
                   --=*====--=+++##:    +*******+===-::::::---=====++++++===------+++*++++++++*++++:+##%%%%%%%#%%%%%#     
                  .=-++=======++*#=     =*******+==--::::::::-----=========---:::-+**++=========++*. -##%@%%%%%%%%%%#+: 
        """)

    def Title(self):
        file_path = r'C:\Users\lloyd\Downloads\Y2meta.app - Billie Eilish - everything i wanted (Official Instrumental) (128 kbps).mp3'
        self.play_music(file_path) 

        print("""
                         

                        /=================================================================\
                                                                  
                        ||  ▄████████    ▄████████ ▀█████████▄   ▄█  ███▄▄▄▄              ||
                        || ███    ███   ███    ███   ███    ███ ███  ███▀▀▀██▄            ||
                        || ███    █▀    ███    ███   ███    ███ ███▌ ███   ███            ||
                        || ███          ███    ███  ▄███▄▄▄██▀  ███▌ ███   ███            ||
                        || ███        ▀███████████ ▀▀███▀▀▀██▄  ███▌ ███   ███            ||
                        || ███    █▄    ███    ███   ███    ██▄ ███  ███   ███            ||
                        || ███    ███   ███    ███   ███    ███ ███  ███   ███            ||
                        || ████████▀    ███    █▀  ▄█████████▀  █▀    ▀█   █▀             ||
                        ||                                                                ||
                        ||    ▄████████    ▄████████  ▄█    █▄     ▄████████    ▄████████ ||
                        ||   ███    ███   ███    ███ ███    ███   ███    ███   ███    ███ ||
                        ||   ███    █▀    ███    █▀  ███    ███   ███    █▀    ███    ███ ||
                        ||  ▄███▄▄▄      ▄███▄▄▄     ███    ███  ▄███▄▄▄      ▄███▄▄▄▄██▀ ||
                        || ▀▀███▀▀▀     ▀▀███▀▀▀     ███    ███ ▀▀███▀▀▀     ▀▀███▀▀▀▀▀   ||
                        ||   ███          ███    █▄  ███    ███   ███    █▄  ▀███████████ ||
                        ||   ███          ███    ███ ███    ███   ███    ███   ███    ███ ||
                        ||   ███          ██████████  ▀██████▀    ██████████   ███    ███ ||
                        ||                                                     ███    ███ ||
                        ||                                                                ||
                        \=================================================================/
        """)


        print("""
                                                █▀▀ ▀█▀ █▀█ █▀▄ ▀█▀
                                                ▀▀█  █  █▀█ █▀▄  █
                                                ▀▀▀  ▀  ▀ ▀ ▀ ▀  ▀                                         
        """)

        while True:
            start = input("Type Start: ")
            st = start.lower()

            if any(keyword in st for keyword in ['start']):
                if st == 'start':
                    self.print_slow("loading...")
                    self.Instructions()
                    break
            else:
                self.print_slow("Looks like you're not too smart to type...\n")
                time.sleep(1)

    def Instructions(self):
         print("")
         print("""
                                  ▀█▀ █▀█ █▀▀ ▀█▀ █▀▄ █ █ █▀▀ ▀█▀ ▀█▀ █▀█ █▀█ █▀▀
                                   █  █ █ ▀▀█  █  █▀▄ █ █ █    █   █  █ █ █ █ ▀▀█
                                  ▀▀▀ ▀ ▀ ▀▀▀  ▀  ▀ ▀ ▀▀▀ ▀▀▀  ▀  ▀▀▀ ▀▀▀ ▀ ▀ ▀▀▀
         """)
         self.print_slow("      Hey there, friend! Welcome to this twisted tale—it's a mix of entertainment, horror, and sheer")
         self.print_slow("      confusion...hope you enjoy the ride, understand the road and take the best path. Bonne chance!") 
         print("")
         self.print_slow("      When faced with choices, just type the suggested word to make your selection and discover the optimal")
         self.print_slow("      path ahead. Your options will show after a sequence, the suggested word will be betweeen brackets.")
         self.print_slow("      For exmaple: What do you like?")
         self.print_slow("      To eat pizza [pizza]")
         self.print_slow("      Playing Cabin Fever [playing]")
         self.print_slow("      word typed: playing ")
         print("")
         self.print_slow("      LET THE ADVENTURE BEGIN! ")

         print("")
         self.Start_game()

    def Start_game(self):
        print("""
               
                     ................................................................................
                     ........................=+*+++:.................................................
                     .......................*++**++#-................................................
                     .......................%*######*:...............................................
                     .......................+%*****+++**+++=-........................................
                     .......................******#*##**+++++**+++=-:................................
                     .....................:=*#**#*******+*******+++++**++==-.........................
                     ....................+#****###*******+++++=++****#**++++**+-.....................
                     ...................-#*#**#*++##***###*******++++++++**#***%=....................
                     ...................=##**#*++++##**#*###******##******++*++**+...................
                     ................=:+#**##*+++++*###*****#*+++==+++**+****#**###..................
                     ...............:*#***##**#*+******#*****##*****++++**+++++++***++=:.............
                     ...............=##**##+*#*===+**#=+*#***###*#*******************++**:...........
                     ..............=######++*#*===+#*#+++*##**#######################***+%...........
                     ............:#***##*+==+#***+***#====++##*##**##**************#######+-.........
                     ............:#*###%++==+****#**#+++++++**#*#***############*#*********#-........
                     .............%##%%*+++++++++++++++++=====+*##*#**********##############-........
                     ............++###%-============+++++=======+*##+**+******+++**+++*+#%%..........
                     ...........-#**#*%++++++++**++++++++=#*=+++*++****##*######*##**+*+#+:..........
                     ............*****#%+++++++*#*******#+#*+++++******##############*##*............
                     ...........=*+***#+======*##+=====+*+**=====++*++*###**#**######%#*#=...........
                     ..........#*+****#*======*##**+===+#+**++===+++***#####*######+++#*=:...........
                     .........-#*******%+++++=*##*****++#+**++*+**+#***######*#####***#..............
                     .........:+#++***#*===*##*********###**=====++****#######*####****+.............
                     ...........+***+*#*===+##*********###*++====+**++*#####*######++++#.............
                     .........:**+*+***%***+##*+++*+++++##*+++++++**++*####****####***#+.............
                     .........-#*****+#=====##*========+##**+**********###*****####***##+:...........
                     ........-+**++***%+++=+##*++++=====#%*+=====****+*####****####****####..........
                     ........##*****#*#%****###***+++++*##**++**###***+*##********+****####..........
                     ........:+##%####*%++*#***********###***#**+++#******++++*****#######*=-........
                     ........=#**#######%##*******######*****#++++**##*******#***#####*#%**++-.......
                     ........-=+**+#**%########***#####%##*+*#*+++++*###*+*##########%###+++=........
                     .........:--====%**********#######**#****#**#***###%######%#***+++==-:..........
                     .............:-=+*########%###****####%*****#######*++=+++======--:.............
                     .................:-==+++++**++========+*****++============---:..................
                     .......................:::----=================-----::::........................



        """)
        self.print_slow("      Tony wakes up on a foreign cabin, he doesn’t remember anything at all and finds out he is tied, there is a ")
        self.print_slow("      night stand near him, a glass highlights from it, Tony looks around, a spring is protruding from the mattress, ")
        self.print_slow("      he is desperate to get free. What should Tony do? ")
        print("                Break the glass and use a piece to cut the rope [Break]")
        print("                Use the spring to cut the rope [Cut]")

        while True:
            option = input("Type: ")
            op = option.lower()

            if any(keyword in op for keyword in ['break', 'cut']):
                if op == 'break':
                    self.print_slow("processing...")
                    self.path_A()
                    break
                if op == 'cut':
                    self.print_slow("processing...")
                    self.path_B()
                    break
            else:
                print("Not the word we're looking for\n")
                time.sleep(1)

    def unlock_map(self):
        print("""
                     ▄▄·        ▐ ▄  ▄▄ • ▄▄▄   ▄▄▄· ▄▄▄▄▄▄• ▄▌▄▄▌   ▄▄▄· ▄▄▄▄▄▪         ▐ ▄ .▄▄ ·     ▄▄ 
                    ▐█ ▌▪▪     •█▌▐█▐█ ▀ ▪▀▄ █·▐█ ▀█ •██  █▪██▌██•  ▐█ ▀█ •██  ██ ▪     •█▌▐█▐█ ▀.     ██▌
                    ██ ▄▄ ▄█▀▄ ▐█▐▐▌▄█ ▀█▄▐▀▀▄ ▄█▀▀█  ▐█.▪█▌▐█▌██▪  ▄█▀▀█  ▐█.▪▐█· ▄█▀▄ ▐█▐▐▌▄▀▀▀█▄    ▐█·
                    ▐███▌▐█▌.▐▌██▐█▌▐█▄▪▐█▐█•█▌▐█ ▪▐▌ ▐█▌·▐█▄█▌▐█▌▐▌▐█ ▪▐▌ ▐█▌·▐█▌▐█▌.▐▌██▐█▌▐█▄▪▐█    .▀ 
                    ·▀▀▀  ▀█▄▀▪▀▀ █▪·▀▀▀▀ .▀  ▀ ▀  ▀  ▀▀▀  ▀▀▀ .▀▀▀  ▀  ▀  ▀▀▀ ▀▀▀ ▀█▄▀▪▀▀ █▪ ▀▀▀▀      ▀ 

        """)

        self.print_slow("      You've unlocked the next stage. Welcome to the Soulless Forest. Navigate by typing 'left,'right,' 'up,' or ")
        self.print_slow("      'down.' You now have an inventory to store items; it starts with a single slot, but maybe you can expand it.")
        self.print_slow("      Best of luck with the looming mysteries ahead. Survival is in your hands. ")
    
    def Map(self):
            pass

    def move_player(self):
        while True:
            option = input("Type 'up', 'down', 'left', or 'right' to move (or 'exit' to stop): ").lower()
            if option == 'exit':
                print("Exiting the game.")
                break  # Salir del bucle while si el usuario decide salir

            x, y = self.player_position

            if option in ['up', 'down', 'left', 'right']:
                if option == 'up' and x > 0 and self.map[x - 1][y] != 1:
                    self.player_position = [x - 1, y]
                elif option == 'down' and x < len(self.map) - 1 and self.map[x + 1][y] != 1:
                    self.player_position = [x + 1, y]
                elif option == 'left' and y > 0 and self.map[x][y - 1] != 1:
                    self.player_position = [x, y - 1]
                elif option == 'right' and y < len(self.map[0]) - 1 and self.map[x][y + 1] != 1:
                    self.player_position = [x, y + 1]
                else:
                    print("Invalid move!")
                    continue  # Continuar pidiendo input si el movimiento no es válido

                print("Moved successfully.")
                print("Actual position:", self.player_position)
            else:
                print("Invalid input. Please try again.")
        
vg = Videogame()
vg.Title()
